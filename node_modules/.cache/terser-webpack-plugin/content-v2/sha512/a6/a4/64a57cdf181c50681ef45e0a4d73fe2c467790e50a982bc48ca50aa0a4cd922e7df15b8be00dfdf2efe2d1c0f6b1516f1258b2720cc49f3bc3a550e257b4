{"map":"{\"version\":3,\"sources\":[\"/home/himanshu/hsoni92-git/hdesign-statuscard-reactjs/src/card.js\",\"/home/himanshu/hsoni92-git/hdesign-statuscard-reactjs/src/App.js\",\"/home/himanshu/hsoni92-git/hdesign-statuscard-reactjs/src/serviceWorker.js\",\"/home/himanshu/hsoni92-git/hdesign-statuscard-reactjs/src/index.js\"],\"names\":[\"data\",\"name\",\"value\",\"COLORS\",\"RecipeReviewCard\",\"state\",\"expanded\",\"handleExpandClick\",\"_this\",\"setState\",\"classes\",\"this\",\"props\",\"react_default\",\"a\",\"createElement\",\"Card_default\",\"className\",\"card\",\"header\",\"topPanel\",\"es6\",\"width\",\"height\",\"onMouseEnter\",\"onPieEnter\",\"cx\",\"cy\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"fill\",\"paddingAngle\",\"stroke\",\"dataKey\",\"map\",\"entry\",\"index\",\"key\",\"concat\",\"length\",\"CardActions_default\",\"actions\",\"disableActionSpacing\",\"style\",\"fontSize\",\"color\",\"React\",\"Component\",\"withStyles\",\"theme\",\"backgroundColor\",\"display\",\"flexDirection\",\"justifyContent\",\"padding\",\"media\",\"paddingTop\",\"alignItems\",\"expand\",\"transform\",\"marginLeft\",\"transition\",\"transitions\",\"create\",\"duration\",\"shortest\",\"expandOpen\",\"avatar\",\"red\",\"App\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"gVAUMA,EAAO,CACX,CAAEC,KAAM,UAAWC,MAAO,IAC1B,CAAED,KAAM,UAAWC,MAAO,KAEtBC,EAAS,CACf,wBACA,yBAgDMC,6MACJC,MAAQ,CAAEC,UAAU,KAEpBC,kBAAoB,WAClBC,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAEC,UAAWD,EAAMC,qFAGpC,IACCI,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,UAAWP,EAAQQ,MACvBL,EAAAC,EAAAC,cAAA,OAAA,CAAME,UAAWP,EAAQS,QAAzB,yBACAN,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAWP,EAAQU,UAEtBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAKC,aAAcb,KAAKc,YAEpDZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACErB,KAAMA,EACN0B,GAAI,IACJC,GAAI,GACJC,WAAY,IACZC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,KAAK,UACLC,aAAc,EACdC,OAAQ,EACRC,QAAQ,SAGNnC,EAAKoC,IAAI,SAACC,EAAOC,GAAR,OAAkBzB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMkB,IAAG,QAAAC,OAAUF,GAASN,KAAM7B,EAAOmC,EAAQnC,EAAOsC,eAQ3F5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAaG,UAAWP,EAAQiC,QAASC,sBAAoB,GAC3D/B,EAAAC,EAAAC,cAAA,MAAA,CAAK8B,MAAO,CAACC,SAAS,SAAUC,MAAM,SAAtC,wBACAlC,EAAAC,EAAAC,cAAA,MAAA,KAAKF,EAAAC,EAAAC,cAAA,OAAA,CAAM8B,MAAO,CAACC,SAAS,MAAOC,MAAM,YAApC,MAA0DlC,EAAAC,EAAAC,cAAA,OAAA,CAAM8B,MAAO,CAACC,SAAS,QAASC,MAAM,SAAtC,2BAzC1CC,EAAAA,EAAMC,WAoDtBC,EAAAA,OAAAA,EAAAA,WAAAA,CAjGA,SAAAC,GAAK,MAAK,CACvBjC,KAAM,CACJI,MAAO,IACPC,OAAQ,KAEVJ,OAAQ,CACNiC,gBAAiB,UACjBL,MAAO,OACPzB,MAAO,OACPC,OAAO,GACP8B,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,QAAS,qBAEXC,MAAO,CACLlC,OAAQ,EACRmC,WAAY,UAEdf,QAAS,CACPU,QAAS,OACTC,cAAc,SACdC,eAAe,SACfI,WAAW,SACXpC,OAAO,KAETqC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYZ,EAAMa,YAAYC,OAAO,YAAa,CAChDC,SAAUf,EAAMa,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNjB,gBAAiBkB,EAAAA,EAAI,MAEvBlD,SAAU,CACRgC,gBAAiB,UACjB7B,OAAQ,WAwDG2B,CAAmB9C,GCtGnBmE,2LARX,OACE1D,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACG,EAAD,cAJU+B,EAAAA,YCQEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Card from '@material-ui/core/Card';\\nimport CardActions from '@material-ui/core/CardActions';\\nimport red from '@material-ui/core/colors/red';\\nimport {\\n  PieChart, Pie, Sector, Cell,\\n} from 'recharts';\\n\\nconst data = [\\n  { name: 'Group A', value: 60 },\\n  { name: 'Group B', value: 40 },\\n];\\nconst COLORS = [\\n'rgba(255,255,255,0.7)',\\n'rgba(255,255,255,0.3)',\\n];\\n\\nconst styles = theme => ({\\n  card: {\\n    width: 220,\\n    height: 350,\\n  },\\n  header: {\\n    backgroundColor: \\\"#d81b60\\\",\\n    color: \\\"#fff\\\",\\n    width: \\\"100%\\\",\\n    height:30,\\n    display: \\\"flex\\\",\\n    flexDirection: 'row',\\n    justifyContent: 'center',\\n    padding: '12px 0px 12px 0px',\\n  },\\n  media: {\\n    height: 0,\\n    paddingTop: '56.25%', // 16:9\\n  },\\n  actions: {\\n    display: 'flex',\\n    flexDirection:'column',\\n    justifyContent:'center',\\n    alignItems:'center',\\n    height:165,\\n  },\\n  expand: {\\n    transform: 'rotate(0deg)',\\n    marginLeft: 'auto',\\n    transition: theme.transitions.create('transform', {\\n      duration: theme.transitions.duration.shortest,\\n    }),\\n  },\\n  expandOpen: {\\n    transform: 'rotate(180deg)',\\n  },\\n  avatar: {\\n    backgroundColor: red[500],\\n  },\\n  topPanel: {\\n    backgroundColor: \\\"#d81b60\\\",\\n    height: \\\"130px\\\",\\n  },\\n});\\n\\nclass RecipeReviewCard extends React.Component {\\n  state = { expanded: false };\\n\\n  handleExpandClick = () => {\\n    this.setState(state => ({ expanded: !state.expanded }));\\n  };\\n\\n  render() {\\n    const { classes } = this.props;\\n\\n    return (\\n      <Card className={classes.card}>\\n        <span className={classes.header}>Execution in progress</span>\\n        <div className={classes.topPanel}>\\n\\n          <PieChart width={400} height={200} onMouseEnter={this.onPieEnter}>\\n            \\n            <Pie\\n              data={data}\\n              cx={105}\\n              cy={60}\\n              startAngle={210}\\n              endAngle={-30}\\n              innerRadius={41}\\n              outerRadius={59}\\n              fill=\\\"#8884d8\\\"\\n              paddingAngle={0}\\n              stroke={0}\\n              dataKey=\\\"value\\\"\\n            >\\n              {\\n                data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\\n              }\\n            </Pie>\\n\\n          </PieChart>\\n\\n\\n        </div>\\n        <CardActions className={classes.actions} disableActionSpacing>\\n          <div style={{fontSize:\\\"0.85em\\\", color:\\\"#999\\\"}}>Overall Job Progress</div>\\n          <div><span style={{fontSize:\\\"3em\\\", color:\\\"#d81b60\\\"}} >37</span><span style={{fontSize:\\\"0.7em\\\", color:\\\"#777\\\"}} >10h to finish</span></div>\\n        </CardActions>\\n      </Card>\\n    );\\n  }\\n}\\n\\nRecipeReviewCard.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(RecipeReviewCard);\\n\",\"import React, { Component } from 'react';\\nimport RecipeReviewCard from './card';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <RecipeReviewCard></RecipeReviewCard>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{221:function(e,t,n){e.exports=n(484)},226:function(e,t,n){},483:function(e,t,n){},484:function(e,t,n){\"use strict\";n.r(t);var a=n(1),r=n.n(a),o=n(38),i=n.n(o),c=(n(226),n(68)),l=n(69),s=n(73),d=n(70),u=n(74),p=n(192),m=n(189),h=n.n(m),f=n(191),g=n.n(f),b=n(108),v=n.n(b),E=n(76),w=[{name:\"Group A\",value:60},{name:\"Group B\",value:40}],x=[\"rgba(255,255,255,0.7)\",\"rgba(255,255,255,0.3)\"],y=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(s.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={expanded:!1},n.handleExpandClick=function(){n.setState(function(e){return{expanded:!e.expanded}})},n}return Object(u.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this.props.classes;return r.a.createElement(h.a,{className:e.card},r.a.createElement(\"span\",{className:e.header},\"Execution in progress\"),r.a.createElement(\"div\",{className:e.topPanel},r.a.createElement(E.c,{width:400,height:200,onMouseEnter:this.onPieEnter},r.a.createElement(E.b,{data:w,cx:105,cy:60,startAngle:210,endAngle:-30,innerRadius:41,outerRadius:59,fill:\"#8884d8\",paddingAngle:0,stroke:0,dataKey:\"value\"},w.map(function(e,t){return r.a.createElement(E.a,{key:\"cell-\".concat(t),fill:x[t%x.length]})})))),r.a.createElement(g.a,{className:e.actions,disableActionSpacing:!0},r.a.createElement(\"div\",{style:{fontSize:\"0.85em\",color:\"#999\"}},\"Overall Job Progress\"),r.a.createElement(\"div\",null,r.a.createElement(\"span\",{style:{fontSize:\"3em\",color:\"#d81b60\"}},\"37\"),r.a.createElement(\"span\",{style:{fontSize:\"0.7em\",color:\"#777\"}},\"10h to finish\"))))}}]),t}(r.a.Component),j=Object(p.withStyles)(function(e){return{card:{width:220,height:350},header:{backgroundColor:\"#d81b60\",color:\"#fff\",width:\"100%\",height:30,display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",padding:\"12px 0px 12px 0px\"},media:{height:0,paddingTop:\"56.25%\"},actions:{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",height:165},expand:{transform:\"rotate(0deg)\",marginLeft:\"auto\",transition:e.transitions.create(\"transform\",{duration:e.transitions.duration.shortest})},expandOpen:{transform:\"rotate(180deg)\"},avatar:{backgroundColor:v.a[500]},topPanel:{backgroundColor:\"#d81b60\",height:\"130px\"}}})(y),O=(n(483),function(e){function t(){return Object(c.a)(this,t),Object(s.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(j,null))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(O,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[221,1,2]]]);","extractedComments":[]}